// C language data for intellisense and syntax highlighting

// C language keywords
export const cKeywords = [
  "auto",
  "break",
  "case",
  "char",
  "const",
  "continue",
  "default",
  "do",
  "double",
  "else",
  "enum",
  "extern",
  "float",
  "for",
  "goto",
  "if",
  "int",
  "long",
  "register",
  "return",
  "short",
  "signed",
  "sizeof",
  "static",
  "struct",
  "switch",
  "typedef",
  "union",
  "unsigned",
  "void",
  "volatile",
  "while",
];

// C standard library functions with signatures
export const cFunctions = [
  { name: "printf", signature: "printf(const char *format, ...)" },
  { name: "scanf", signature: "scanf(const char *format, ...)" },
  { name: "fprintf", signature: "fprintf(FILE *stream, const char *format, ...)" },
  { name: "fscanf", signature: "fscanf(FILE *stream, const char *format, ...)" },
  { name: "sprintf", signature: "sprintf(char *str, const char *format, ...)" },
  { name: "sscanf", signature: "sscanf(const char *str, const char *format, ...)" },
  { name: "fopen", signature: "fopen(const char *filename, const char *mode)" },
  { name: "fclose", signature: "fclose(FILE *stream)" },
  { name: "fread", signature: "fread(void *ptr, size_t size, size_t nmemb, FILE *stream)" },
  { name: "fwrite", signature: "fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream)" },
  { name: "malloc", signature: "malloc(size_t size)" },
  { name: "calloc", signature: "calloc(size_t nmemb, size_t size)" },
  { name: "realloc", signature: "realloc(void *ptr, size_t size)" },
  { name: "free", signature: "free(void *ptr)" },
  { name: "strlen", signature: "strlen(const char *s)" },
  { name: "strcpy", signature: "strcpy(char *dest, const char *src)" },
  { name: "strcat", signature: "strcat(char *dest, const char *src)" },
  { name: "strcmp", signature: "strcmp(const char *s1, const char *s2)" },
  { name: "strncpy", signature: "strncpy(char *dest, const char *src, size_t n)" },
  { name: "strncat", signature: "strncat(char *dest, const char *src, size_t n)" },
  { name: "strncmp", signature: "strncmp(const char *s1, const char *s2, size_t n)" },
  { name: "memset", signature: "memset(void *s, int c, size_t n)" },
  { name: "memcpy", signature: "memcpy(void *dest, const void *src, size_t n)" },
  { name: "memmove", signature: "memmove(void *dest, const void *src, size_t n)" },
  { name: "memcmp", signature: "memcmp(const void *s1, const void *s2, size_t n)" },
];

// Common C header files
export const cHeaders = [
  "#include <stdio.h>",
  "#include <stdlib.h>",
  "#include <string.h>",
  "#include <math.h>",
  "#include <time.h>",
  "#include <ctype.h>",
  "#include <assert.h>",
  "#include <errno.h>",
  "#include <limits.h>",
  "#include <float.h>",
];